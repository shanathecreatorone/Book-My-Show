#%RAML 1.0
title: Book My Show


types:
  Movies: !include /data-types/MovieDataType.raml
  Tickets: !include /data-types/TicketDataType.raml


/movies:
  get:
    description: Displays movies that are currently in theatres
    queryParameters:
     Movie ID:
      required: true
      type: integer
     Movie Title:
      required: false
      type: string
     Movie Description:
      required: false
      type: string
     Movie Showtimes:
      required: false
      type: string
        
    responses:
      200:
       body:
        application/json:
          type: Movies
          example: !include /examples/MovieExample.raml
      400:
       body:
        application/json:
          example:
            message: MOVIE NOT FOUND!

  post:
        displayName: Add new movie
        description: Create a new movie
        body:
          application/json:
            type: Movies
        responses:
          201:
            body:
              application/json:
                type: Movies
                example: !include /examples/AddMovieExample.raml
          400:
            body:
              application/json:
                example:
                  message: MOVIE NOT ADDED!

  put:
        description: Update a movie
        body:
          application/json:
            type: 
            example: 
              input: 
        responses:
          200:
            body:
              application/json:
                example: !include /examples/TicketExample.raml
                  message: Movie updated!

  /{movie_id}:
        get:
          description: Find tickets by ID
          responses:
            200:
              body:
                application/json:
                  type: 
                  examples:
                    output: 
              
  delete:
        description: Delete a Movie
        responses:
          200:
            body:
              application/json:
                example:
                  message: Movie deleted!
        
/tickets: 
  get:
      description: Gets all tickets based on the given query parameters
      queryParameters:
        Ticket ID: 
          displayName: Ticket ID
          description: Ticket ID number 
          required: true
          type: integer
        Ticket Type:
            displayName: Ticket Type
            description: Shows whether it Balcony or First Class ticket
            required: false
            type: string
        Ticket Price:
            displayName: Ticket Price
            description: Displays the price of the ticket in rupees
            required: false
            type: string
        Ticket Number:
            displayName: Ticket Number
            description: Shows the row and seat number of the ticket
            required: false
            type: string
        Ticket Booked:
            displayName: Ticket Booked
            description: Shows whether ticket has been booked
            required: false
            type: string
      responses:
          200:
            body:
              application/json:
                type: Tickets
                example: !include /examples/TicketExample.raml
          400:
            body:
              application/json:
                example:
                  message: Error retrieving Ticket data!
                  
  post:
        displayName: Add new ticket
        description: Create a new ticket
        body:
          application/json:
            type: Tickets
        responses:
          201:
            body:
              application/json:
                type: T
                example: !include /examples/TicketExample.raml
                  
          400:
            body:
              application/json:
                example:
                  message: Error creating new ticket.
                  

  put:
        description: Update a ticket
        body:
          application/json:
            type: 
            examples: 
              input: 
        responses:
          200:
            body:
              application/json:
                example:
                  message: Ticket Updated!

  delete:
        description: Delete a ticket
        responses:
          200:   
            body:
              application/json:
                example:
                  message: Ticket deleted!
                  
/{ticket_id}:
        get:
          description: Find tickets by ID
          responses:
            200:
              body:
                application/json:
                  type: 
                  examples:
                    output: 